Файлы:
task_test.txt - исходный файл
error.txt - файл с невалидными данными
result.txt - итоговый файл

Описание:
Есть исходный текстовый файл task_test, который представляет собой список данных людей со следующими заголовками:

EMAIL	NAME	LAST_NAME	TEL	CITY

Скрипт делает следующее:

1) Читает исходный текстовый файл
2) Создает почтовые адреса
3) Заполняет пустой столбец с почтовыми адресами в исходном файле и перезаписывает его
4) Условие - e-mail должен создаваться только для тех, у кого заполнены все остальные поля - Имя, Фамилия, Телефонный номер, Город
5) Телефонный номер считаем валидным, если он состоит из 7 цифр, в противном случае информация невалидна и тогда e-amil не создаваем

После выполнения скрипта итоговый текстовый файл должен быть заполнен информацией с почтовыми адресами сотрудников. 

Функция принимает список списков [['Имя_1', 'Фамилия_1'], ['Имя_2', 'Фамилия_2'], ['Имя_3', 'Фамилия_3']] из имен и фамилий list_of_names. Далее создается пустой список emails, который в ходе выполнения, заполнится почтовыми адресами. Запускается цикл для каждого списка из имени и фамилии ['Имя_1', 'Фамилия_1']. Устанавливается окончание среза letter = 1. Далее проходит проверка на совпадение, если в списке адресов уже есть такой же адрес (например имя и фамилия сотрудников совпадают), то срез i[0][0:letter] увеличивается на 1 символ. После в список адресов добавляется новый адрес. Адреса присваиваются пользователям по следующей формуле: берется фамилия сотрудника, добавляется точка, затем добавляется первая буква имени и остаточная часть '@company.io'. Если имена и фамилии сотрудников совпадают, к первой букве имени добавляется вторая и т.д.

6) Очистка итогового файла от всех невалидных данных (строки с пустыми данными, некорректными именами, некорректными телефонами и городами)
- при очистке исходного файла, все невалидные данные удалются из него и сохранются в отдельный текстовый файл error_list.txt

7) Сгенерированные пароли заноситься в итоговый файл в отдельный столбец "PASSWORD"